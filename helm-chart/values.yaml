# Default values for enabler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# String to partially override enabler.fullname template (will maintain the release name).
nameOverride: ""
# String to fully override enabler.fullname template.
fullnameOverride: ""
# Deploy all the components in specific K8s node(s).
enablerNodeSelector: {}
# Cilium Multi-cluster global service.
globalService: false

# Component mediaserver values.
mediaserver:
  tier: external
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: []
  image:
    repository: bluenviron/mediamtx
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest-ffmpeg"
    pullPolicy: IfNotPresent
  
  # Configuration of the service: type and ports.
  service:
    type: NodePort
    ports:
      port1:
        port: 8554
        targetPort: 8554
        containerPort: 8554
        nodePort: "30854"
        protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: 
    limits:
      # cpu: 100m
      memory: 512Mi
    requests:
      # cpu: 100m
      memory: 512Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in containers section of the component's manifest.
  # TODO: Here and in the manifest is included an example, please adapt them to the requirements of your component.
  envVars:
    MTX_PROTOCOLS: tcp
    MTX_WEBRTCADDITIONALHOSTS: localhost


  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component runner values.
runner:
  tier: internal
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: []
  image:
    repository: assistiot/video_augmentation
    # Overrides the image tag whose default is the chart appVersion.
    # tag: "runner-cpu-latest"
    tag: "runner-cpu-latest"
    pullPolicy: IfNotPresent
  
  # Configuration of the service: type and ports.
  service:
    type: ClusterIP
    ports:
      port1:
        port: 80
        targetPort: 80
        containerPort: 80
        nodePort: ""
        protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources:
    limits:
    #   cpu: 100m
      memory: 2Gi
    requests:
    #   cpu: 100m
      memory: 2Gi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in containers section of the component's manifest.
  # TODO: Here and in the manifest is included an example, please adapt them to the requirements of your component.
  envVars:
    MEDIA_SERVER_HOST: media-server
    INPUT_STREAM: /var/media/videos/video1.mp4
    CRANE_NAME: rtg01
    LOOP_VIDEO: true
    SCHEME: hls
    SKIP_FRAME_PERC: 85


  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

  volumes:
    videos:
      mountPath: /var/media/videos
    hlsFiles:
      mountPath: /var/media/hls


# Component nginx values.
nginx:
  tier: internal
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: []
  image:
    repository: nginx
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
    pullPolicy: IfNotPresent
  
  # Configuration of the service: type and ports.
  service:
    type: NodePort
    ports:
      port1:
        port: 80
        targetPort: 80
        containerPort: 80
        nodePort: "30080"
        protocol: TCP

  # The specification of the resources is needed for the proper functioning 
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in containers section of the component's manifest.
  # TODO: Here and in the manifest is included an example, please adapt them to the requirements of your component.
  envVars: {}


  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

  volumes:
    hlsFiles:
      mountPath: /usr/share/nginx/html

  configs:
    nginxConfig:
      mountPath: /etc/nginx/conf.d/default.conf


volumes:
  videos:
    name: videos
    hostPath: /var/media/videos

  hlsFiles:
    name: hlsfiles
    hostPath: /var/media/hls
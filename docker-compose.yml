version: "3.8"
services:
  trainer-gpu:
    build:
      context: .
      dockerfile: Dockerfile.trainer
      args:
        - VARIANT=-gpu
        - TF_VERSION=2.12.0 # DO NOT CHANGE OR THE EXECUTION WILL BREAK
    profiles:
      - gpu
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: on-failure
    ports:
      - 8889:8888 # jupyter
      - 6006-6015:6006-6015 # tensorboard
    environment:
      - JUPYTER_TOKEN=123
    volumes:
      - type: volume
        source: datasets
        target: /home/tensorflow/datasets
        read_only: false
      - type: volume
        source: models
        target: /home/tensorflow/models
        read_only: false
      - type: volume
        source: notebook
        target: /home/tensorflow/notebook
        read_only: false

  trainer-cpu:
    build:
      context: .
      dockerfile: Dockerfile.trainer
      args:
        - VARIANT=
        - TF_VERSION=2.12.0 # DO NOT CHANGE OR THE EXECUTION WILL BREAK
    profiles:
      - cpu
    restart: on-failure
    ports:
      - 8889:8888 # jupyter
      - 6006-6015:6006-6015 # tensorboard
    environment:
      - JUPYTER_TOKEN=123
    volumes:
      - type: volume
        source: datasets
        target: /home/tensorflow/datasets
        read_only: false
      - type: volume
        source: models
        target: /home/tensorflow/models
        read_only: false
      - type: volume
        source: notebook
        target: /home/tensorflow/notebook
        read_only: false

  runner-gpu:
    build:
      context: .
      dockerfile: Dockerfile.runner
      args:
        - VARIANT=-gpu
        - TF_VERSION=2.12.0 # DO NOT CHANGE OR THE EXECUTION WILL BREAK
    image: assistiot/video_augmentation:runner-gpu-latest
    hostname: runner
    profiles:
      - gpu
    restart: on-failure
    environment:
      - MEDIA_SERVER_HOST=media-server
      - INPUT_STREAM=/var/media/videos/video1.mp4
      - CRANE_NAME=rtg01
      - LOOP_VIDEO=true
      - SCHEME=hls
      #- SKIP_FRAME_PERC=85
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 2g
    depends_on:
      - media-server
      - nginx
    volumes:
      - type: volume
        source: videos
        target: /var/media/videos
        read_only: true
      - source: hls-files
        type: volume
        target: /var/media/hls
        read_only: false

  runner-cpu:
    build:
      context: .
      dockerfile: Dockerfile.runner
      args:
        - TF_VERSION=2.12.0 # DO NOT CHANGE OR THE EXECUTION WILL BREAK
    image: assistiot/video_augmentation:runner-cpu-latest
    hostname: runner
    profiles:
      - cpu
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 2g
    environment:
      - MEDIA_SERVER_HOST=media-server
      - INPUT_STREAM=/var/media/videos/video1.mp4
      - CRANE_NAME=rtg01
      - LOOP_VIDEO=true
      - SCHEME=hls
      - SKIP_FRAME_PERC=85
    depends_on:
      - media-server
      - nginx
    volumes:
      - type: volume
        source: videos
        target: /var/media/videos
        read_only: true
      - source: hls-files
        type: volume
        target: /var/media/hls
        read_only: false

  media-server:
    image: bluenviron/mediamtx:latest-ffmpeg
    environment:
      - MTX_PROTOCOLS=tcp
      - MTX_WEBRTCADDITIONALHOSTS=130.0.0.4
    ports:
      - 8554:8554 # RTSP
    profiles:
      - gpu
      - cpu
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 512m
  nginx:
    image: nginx
    ports:
      - 8888:80
    volumes:
      - source: hls-files
        type: volume
        target: /usr/share/nginx/html
        read_only: true
    configs:
      - source: nginx-config
        target: /etc/nginx/conf.d/default.conf


volumes:
  # Volumen en el que cada carpeta contiene un conjunto de im√°genes etiquetadas en formato COCO (con un json)
  datasets:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/datasets
    labels:
      - "com.docker.compose.project=enabler"
  models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/models
    labels:
      - "com.docker.compose.project=enabler"
  notebook:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/jupyter
    labels:
      - "com.docker.compose.project=enabler"
  videos:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./samples
  hls-files:

configs:
  nginx-config:
    file: ./config/nginx/nginx.conf